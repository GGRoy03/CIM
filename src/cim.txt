the IO thread records changes: ID, what to change, value | In some sort of queue
which we try and consume every single frame on the main thread. Can we give the ptr?
Uhm, might be unsafe, because we probably want to resize the hashmap?? Still unsure
how the hashmap works anyway...

style_update_queue
{
    style_update *Buffer;
    Size, Cap;

    Rolling buffer...? Ya, Entries to process... Then it's like: how do we know what 
    changed exactly such that we process only the entries that have changed. Could
    do a full copy for now?
}

======================================================================================

Alright, how do we solve the constraints ugly ass code problem? We don't need
globals, probably store in the context. Honestly constraints are just the layout
algorithm. Uhm, doesn't matter for now probably?? I mean... I just need something
okayish for now. Uhm... Also depends on how we process/record constraints.
Uuuhh... Since constraints morph the points, we need pointers to them.
Can we store on the component themselves? What if we have a list of em?
It's frame based anyways. Uhm... We solve by batch: for drag in drags... do something.
Current scheme looks okayish, need to see how we want to implement the layout.

=======================================================================================

Layout is done by tree: StartTree, EndTree, whatever. Uhm, When EndTree is called we
just "solve" the layout. We need some sort of tree builder. Right now just thinking
we have an arena per frame for various stuff. Per tree right. So we store trees..
Uhm, do we actually just keep the raw component data in a hashmap? Idk. Uh.

How does it even work..

Window -> PushLayoutNode 
(If parent stack is empty, change tree)
Is it by component? E.g. Button can't be parent? No.
